# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gruf/Error.proto
# coding: utf-8
# Copyright (c) 2017-present, BigCommerce Pty. Ltd. All rights reserved
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit
# persons to whom the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
require 'google/protobuf'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_message "gruf.ErrorHeader" do
    optional :error_code, :string, 1
    optional :error_message, :string, 2
    optional :error_type, :enum, 3, "gruf.ErrorHeader.ErrorType"
    repeated :field_errors, :message, 4, "gruf.FieldError"
    optional :debug_info, :message, 5, "gruf.DebugInfo"
  end
  add_enum "gruf.ErrorHeader.ErrorType" do
    value :INTERNAL, 0
    value :BAD_REQUEST, 1
    value :NOT_FOUND, 2
    value :UNAUTHORIZED, 3
  end
  add_message "gruf.FieldError" do
    optional :field_name, :string, 1
    optional :error_code, :string, 2
    optional :error_message, :string, 3
  end
  add_message "gruf.DebugInfo" do
    optional :detail, :string, 1
    repeated :stack_trace, :string, 2
  end
end

module Gruf
  ErrorHeader = Google::Protobuf::DescriptorPool.generated_pool.lookup("gruf.ErrorHeader").msgclass
  ErrorHeader::ErrorType = Google::Protobuf::DescriptorPool.generated_pool.lookup("gruf.ErrorHeader.ErrorType").enummodule
  FieldError = Google::Protobuf::DescriptorPool.generated_pool.lookup("gruf.FieldError").msgclass
  DebugInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("gruf.DebugInfo").msgclass
end
