#!/usr/bin/env ruby
#
# Copyright (c) 2017, BigCommerce Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 1. Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
# must display the following acknowledgement:
# This product includes software developed by BigCommerce Inc.
# 4. Neither the name of BigCommerce Inc. nor the
# names of its contributors may be used to endorse or promote products
# derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY BIGCOMMERCE INC ''AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL BIGCOMMERCE INC BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# use this file to spin up a test grpc server based on the files in support/grpc_server.rb
#
require 'rubygems'
require 'bundler'
Bundler.setup
require 'active_support/all'
require 'gruf'
$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)
require File.realpath("#{File.dirname(__FILE__)}/support/grpc_server.rb")
require File.realpath("#{File.dirname(__FILE__)}/support/error.rb")
require File.realpath("#{File.dirname(__FILE__)}/support/serializers/proto.rb")

Gruf.configure do |c|
  c.authentication_options = {
    credentials: [{
      username: ENV.fetch('AUTH_USERNAME', 'grpc'),
      password: ENV.fetch('AUTH_PASSWORD', 'magic')
    }]
  }
  c.error_serializer = Serializers::Proto
end
Gruf::Authentication::Strategies.add(:basic, Gruf::Authentication::Basic)
Gruf.logger = Logger.new(STDOUT)

begin
  server = Gruf::Server.new
  server.services << ThingService
  server.start!
rescue => e
  puts e.message
  puts e.backtrace.join("\n")
end
